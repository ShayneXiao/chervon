#spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.url=jdbc:postgresql://ec2-23-23-234-118.compute-1.amazonaws.com/d2qr30imhegokq?ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory
#驱动名
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=qfxssgdttansik
spring.datasource.password=b10a24bbe05d48125881f9e6268ec769db1c63ab5103a25dbbb6c5cfb607da32
#数据库方言类型
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#本地数据库
#spring.datasource.url = jdbc:postgresql://localhost:5432/postgres
#spring.datasource.username = postgres
#spring.datasource.password = heqinsi123

#mybatis配置文件
mybatis.mapper-locations=classpath:mybatisMapper/*.xml

#连接池的配置信息#
#连接池中创建的连接默认是否自动提交事务
spring.datasource.tomcat.default-auto-commit=true
#连接池启动时创建的初始连接数量（默认10）
spring.datasource.tomcat.initial-size=3
#连接池同一时间可分配的最大活跃连接数（默认100）
spring.datasource.tomcat.max-active=120
#最大等待时间（毫秒） ， 如果在没有连接可用的情况下等待超过此时间 ， 则抛出异常（默认30000）
spring.datasource.tomcat.max-wait=10000
#当从连接池中取出一个连接时是否进行验证 ， 若验证失败则从池中删除该连接并尝试取出另一个连接（默认false）
spring.datasource.tomcat.test-on-borrow=true
#对池中空闲的连接是否进行验证 ， 验证失败则回收此连接
spring.datasource.tomcat.test-while-idle=true
#在连接池返回连接给调用者前用来对连接进行验证的查询 SQL 默认（null）
spring.datasource.tomcat.validation-query=SELECT 1
#SQL 查询验证超时时间（秒） ， 小于或等于 0 的数值表示禁用，小于等于0默认禁用
spring.datasource.tomcat.validation-query-timeout=3
#空闲连接回收器线程运行期间休眠时间（毫秒） ， 该值不应该小于 1 秒 ， 它决定线程多久验证空闲连接或丢弃连接的频率（默认5000）
spring.datasource.tomcat.time-between-eviction-runs-millis=10000
#连接在池中保持空闲而不被回收的最小时间（毫秒）
spring.datasource.tomcat.min-evictable-idle-time-millis=120000
#标记是否删除泄露的连接 ， 如果连接超出 removeAbandonedTimeout 的限制 ， 且该属性设置为 true ， 则连接被认为是被泄露并且可以被删除
spring.datasource.tomcat.remove-abandoned=true
#泄露的连接可以被删除的超时时间（秒） ， 该值应设置为应用程序查询可能执行的最长时间（默认60）
spring.datasource.tomcat.remove-abandoned-timeout=120

server.port=8099
server.context-path=

spring.jackson.serialization.INDENT_OUTPUT=true

jwt.header=Authorization
jwt.secret=mySecret
jwt.expiration=604800 
jwt.expirationhours=3600
#//604800   7 天
jwt.route.authentication.path=auth
jwt.route.authentication.refresh=refresh

ocr.base.url=https://api.ocrestful.com/ubu30/res/

email.url=localhost:8080/api/v1/users/aa/
#https://private-c0530-iyo.apiary-mock.com/api/v1/

sfdc.url=https://pa-ego.cs25.force.com/services/apexrest/UserEndpoints

app_key=IoTHerokuToSF
# 设置邮箱主机
spring.mail.host=smtp.gmail.com
# 设置用户名
spring.mail.username=egoheroku.v1.@gmail.com
# 设置密码
spring.mail.password=heqinsi123
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false


relation_BaseLink=https://private-b1af72-egoapi.apiary-mock.com/api/v1/

#able cloud api 相关配置
ablecloud.developerId=482
ablecloud.url=http://test.ablecloud.cn:5000/chervonService/v1/
ablecloud.accessKey=ce28dbd04048029e80c6f1975765cc80
ablecloud.timeout=31536000
ableCloud.secretKey=4b30af824096f78480cb92546b8b7e1b
ableCloud.subDomain=chervon

#redis
spring.redis.database=0
# server host1
#spring.redis.host=localhost
spring.redis.host=127.0.0.1
# server password
#spring.redis.password=
#connection port
spring.redis.port=6379
# pool settings ...
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chervon.iot.ablecloud.mapper.AbleDeviceErrorsMapper" >
  <resultMap id="BaseResultMap" type="com.jiuyue.mlratingstudio.common.pojo.AbleDeviceErrors" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sn" property="sn" jdbcType="VARCHAR" />
    <result column="recoverable" property="recoverable" jdbcType="BIT" />
    <result column="device" property="device" jdbcType="VARCHAR" />
    <result column="fault" property="fault" jdbcType="VARCHAR" />
    <result column="isfixed" property="isfixed" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sn, recoverable, device, fault, isfixed, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jiuyue.mlratingstudio.common.pojo.AbleDeviceErrorsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from able_device_errors
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from able_device_errors
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from able_device_errors
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jiuyue.mlratingstudio.common.pojo.AbleDeviceErrorsExample" >
    delete from able_device_errors
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jiuyue.mlratingstudio.common.pojo.AbleDeviceErrors" >
    insert into able_device_errors (id, sn, recoverable, 
      device, fault, isfixed, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{sn,jdbcType=VARCHAR}, #{recoverable,jdbcType=BIT}, 
      #{device,jdbcType=VARCHAR}, #{fault,jdbcType=VARCHAR}, #{isfixed,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jiuyue.mlratingstudio.common.pojo.AbleDeviceErrors" >
    insert into able_device_errors
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sn != null" >
        sn,
      </if>
      <if test="recoverable != null" >
        recoverable,
      </if>
      <if test="device != null" >
        device,
      </if>
      <if test="fault != null" >
        fault,
      </if>
      <if test="isfixed != null" >
        isfixed,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sn != null" >
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="recoverable != null" >
        #{recoverable,jdbcType=BIT},
      </if>
      <if test="device != null" >
        #{device,jdbcType=VARCHAR},
      </if>
      <if test="fault != null" >
        #{fault,jdbcType=VARCHAR},
      </if>
      <if test="isfixed != null" >
        #{isfixed,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jiuyue.mlratingstudio.common.pojo.AbleDeviceErrorsExample" resultType="java.lang.Integer" >
    select count(*) from able_device_errors
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update able_device_errors
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sn != null" >
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.recoverable != null" >
        recoverable = #{record.recoverable,jdbcType=BIT},
      </if>
      <if test="record.device != null" >
        device = #{record.device,jdbcType=VARCHAR},
      </if>
      <if test="record.fault != null" >
        fault = #{record.fault,jdbcType=VARCHAR},
      </if>
      <if test="record.isfixed != null" >
        isfixed = #{record.isfixed,jdbcType=BIT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update able_device_errors
    set id = #{record.id,jdbcType=INTEGER},
      sn = #{record.sn,jdbcType=VARCHAR},
      recoverable = #{record.recoverable,jdbcType=BIT},
      device = #{record.device,jdbcType=VARCHAR},
      fault = #{record.fault,jdbcType=VARCHAR},
      isfixed = #{record.isfixed,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jiuyue.mlratingstudio.common.pojo.AbleDeviceErrors" >
    update able_device_errors
    <set >
      <if test="sn != null" >
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="recoverable != null" >
        recoverable = #{recoverable,jdbcType=BIT},
      </if>
      <if test="device != null" >
        device = #{device,jdbcType=VARCHAR},
      </if>
      <if test="fault != null" >
        fault = #{fault,jdbcType=VARCHAR},
      </if>
      <if test="isfixed != null" >
        isfixed = #{isfixed,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiuyue.mlratingstudio.common.pojo.AbleDeviceErrors" >
    update able_device_errors
    set sn = #{sn,jdbcType=VARCHAR},
      recoverable = #{recoverable,jdbcType=BIT},
      device = #{device,jdbcType=VARCHAR},
      fault = #{fault,jdbcType=VARCHAR},
      isfixed = #{isfixed,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>